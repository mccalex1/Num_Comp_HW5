During the first iteration where i=10, we see that SRAND and SRANDOM have an equal error while rand_r is initially pretty close to the exact result, but still not exact to many decimal places. As we use more iterations past 10, we see it slowly lose precision compared to SRAND and SRANDOM. Quickly we see these two other methods of PSRN get more accurate results. Although the next iteration, i=1000, gives us more accurate results for rand_r than does SRANDOM, later iterations still have SRAND and SRANDOM eventually having a more accurate precision than rand_r. This doesn't mean rand_r is worse at calculating random numbers nor does it mean one is better than the other. It seems random in how well each of the types of PRNG calculate the actual answer. But what we do see is each multiple of 10 iterations as the number of iterations increase, we see a precision closer to 0.
